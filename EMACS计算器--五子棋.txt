EMACS计算器

Emacs号称神的编辑器，它自带了一个计算器。与其他计算器不同，它是基于后缀表达式的，即运算符在操作数的后面。例如“2 3 +”等价于中缀表达式的“2 + 3”。
请你实现一个后缀表达式的计算器。

输入描述:
输入包含多组数据。

每组数据包括两行：第一行是一个正整数n (3≤n≤50)；紧接着第二行包含n个由数值和运算符组成的列表。

“+-*/”分别为加减乘除四则运算，其中除法为整除，即“5/3=1”。


输出描述:
对应每一组数据，输出它们的运算结果。
示例1
输入
3
2 3 +
5
2 2 + 3 *
5
2 2 3 + *
输出
5
12
10
代码如下：
// write your code here cpp
#include<iostream>
#include<vector>
#include<stdio.h>
#include<string>
#include<stdlib.h>
using namespace std;
int count(int a,int b,char c)
{
    switch(c)
    {
        case '+':
            return a+b;
        case '-':
            return a-b;
        case '*':
            return a*b;
        case '/':
            return a/b;
        case '%':
            return a%b;
        default:
            return 0;
    }
}
int main()
{
    int n;
    
    while(cin>>n)
    {
        vector<string> v;
        v.resize(n);
        for(int i=0;i<n;i++)
        {
            string c;
            cin>>c;
            v[i]=c;
        }
        int i=0;
        while(v.size()>1)
        {    
            int a,b;
            char c;
            for(int j=0;j<v.size();j++)
            {
                if(v[j]=="+"||v[j]=="-"||v[j]=="*"||v[j]=="/"||v[j]=="%")
                {
                    a=atoi(v[j-2].c_str());
                    b=atoi(v[j-1].c_str());
                    c=v[j][0];
                    char s[20];
                    sprintf(s,"%d",count(a,b,c));
                    v[j]=s;
                    v.erase(v.begin()+j-2,v.begin()+j);
                    break;
                }
            }
            
        }
        cout<<atoi(v[0].c_str())<<endl;
        
    }
    return 0;
}
