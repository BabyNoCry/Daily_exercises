//组队竞赛

牛牛举办了一次编程比赛,参加比赛的有3*n个选手,每个选手都有一个水平值a_i.
现在要将这些选手进行组队,一共组成n个队伍,即每个队伍3人.
牛牛发现队伍的水平值等于该队伍队员中第二高水平值。
  例如:
  一个队伍三个队员的水平值分别是3,3,3.那么队伍的水平值是3
  一个队伍三个队员的水平值分别是3,2,3.那么队伍的水平值是3
  一个队伍三个队员的水平值分别是1,5,2.那么队伍的水平值是2
  为了让比赛更有看点,牛牛想安排队伍使所有队伍的水平值总和最大。
#include<iostream>
#include<vector> 
#include<algorithm>
using namespace std;
void help(vector<int>& v)
{
	std::sort(v.begin(),v.end());
}
int main()
{
	int n,t;
	vector<int> v;

	cin>>n;
	for(int i=0;i<n*3;i++)
	{
		cin>>t;
		v.push_back(t);
	}
	help(v);
	
	int sum=0;
	for(int i=n;i<n*3;i+=2)
	{
		sum+=v[i];
	}

	cout<<sum;

 } 



//删除公共字符
输入两个字符串，从第一字符串中删除第二个字符串中所有的字符。
例如，输入”They are students.”和”aeiou”，
则删除之后的第一个字符串变成”Thy r stdnts
#include<iostream>
#include<string>
using namespace std;
int main()
{
    string str1;
    string str2;
    string ret;
    //cin输入字符串读取到空格会中断，应选用getline输入
    getline(cin,str1);
    getline(cin,str2);
    //用哈希映射思想统计str2中字符出现的次数
    int hashtable[256]={0};
    for(int i=0;i<str2.size();i++)
    {
         hashtable[str2[i]]++;
    }
    
    //将str1中的字符与哈希表映射，查看该元素是否存在与str2中，不存在则存入ret中
    for(int i=0;i<str1.size();i++)
    {
        if(hashtable[str1[i]]==0)
            ret+=str1[i];
    }
    cout<<ret;
}