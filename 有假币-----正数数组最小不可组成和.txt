居然有假币！ 现在猪肉涨了，但是农民的工资却不见涨啊，没钱怎么买猪肉啊。nowcoder这就去买猪肉，结果找来的零钱中有假币！！！可惜nowcoder一不小心把它混进了一堆真币里面去了。只知道假币的重量比真币的质量要轻，给你一个天平（天平两端能容纳无限个硬币），请用最快的时间把那个可恶的假币找出来。

输入描述:
1≤n≤2^30,输入0结束程序。



输出描述:
最多要称几次一定能把那个假币找出来？

输入例子:
3
12
0
?

输出例子:
1
3

代码如下：
#include<iostream>
using namespace std;
int Func(int n)
{
    int num=0;
    while(n>1)
    {
        if(n%3!=0)
        {
            n=n/3+1;
        }
        else
            n/=3;
        num++;
    }
        
    return num;
}
int main()
{
    int n;
    while(cin>>n&&n!=0)
    {
        cout<<Func(n)<<endl;
    }
    return 0;
}


正数数组最小不可组成和

给定一个正数数组arrarr，其中所有的值都为整数，以下是最小不可组成和的概念：

把arrarr 每个子集内的所有元素加起来会出现很多值，其中最小的记为minmin，最大的为maxmax。

在区间[min,max][min,max]上，如果有数不可以被arr 某一个子集相加得到，那么其中最小的数是arr的最小不可组成和。

在区间[min,max][min,max]上，如果所有的数都可以被arrarr的某一个子集相加得到，那么max+1max+1是arrarr的最小不可组成和。

请写函数返回正数数组arrarr的最小不可组成和。
分析：
设dp[i][j]表示到第i个数能不能组成j.dp[i][j]=dp[i?1][j?a[i]]|dp[i?1][j]

代码如下：

